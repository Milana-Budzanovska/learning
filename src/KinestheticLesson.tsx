import React, { useState } from 'react';

const audioMap: Record<string, string> = {
  "–ì—Ä—ñ–º": "https://www.soundjay.com/nature/thunder-1.mp3",
  "–°–º—ñ—Ö": "https://www.soundjay.com/human/laugh-1.mp3",
  "–î–∑–≤—ñ–Ω–æ–∫": "https://www.soundjay.com/phone/telephone-ring-1.mp3",
};

const oddOneOutOptions = [
  { image: "üåßÔ∏è", label: "–î–æ—â", sound: "–ì—Ä—ñ–º" },
  { image: "üìû", label: "–¢–µ–ª–µ—Ñ–æ–Ω", sound: "–î–∑–≤—ñ–Ω–æ–∫" },
  { image: "üé®", label: "–§–∞—Ä–±–∞", sound: "–¢–∏—à–∞" }, // –∑–∞–π–≤–∏–π
];

const shuffledWords = ["–ì—Ä—ñ–º", "–°–º—ñ—Ö", "–î–∑–≤—ñ–Ω–æ–∫", "–ù–µ–±–æ", "–†–∞–¥—ñ—Å—Ç—å", "–¢–µ–ª–µ—Ñ–æ–Ω"];

const KinestheticLesson: React.FC = () => {
  const [selectedOdd, setSelectedOdd] = useState<string | null>(null);

  const playSound = (label: string) => {
    const sound = audioMap[label];
    if (sound) {
      const audio = new Audio(sound);
      audio.play();
    }
  };

  const handleOddOneOut = (label: string) => {
    setSelectedOdd(label);
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-yellow-100 to-pink-100 p-6 font-sans">
      <div className="max-w-5xl mx-auto bg-white rounded-3xl shadow-xl p-8">
        <h1 className="text-3xl font-bold text-purple-700 text-center mb-8">–ö—ñ–Ω–µ—Å—Ç–µ—Ç–∏—á–Ω–∏–π —É—Ä–æ–∫</h1>

        {/* –í–ø—Ä–∞–≤–∞ 1: –ê—Å–æ—Ü—ñ–∞—Ü—ñ—è –∑–≤—É–∫-—Å–ª–æ–≤–æ */}
        <section className="mb-12">
          <h2 className="text-2xl font-bold text-purple-600 mb-4">üéß –ó–Ω–∞–π–¥–∏ –ø–∞—Ä—É: –∑–≤—É–∫ —Ç–∞ —Å–ª–æ–≤–æ</h2>
          <div className="grid grid-cols-3 gap-6">
            {Object.keys(audioMap).map((label, idx) => (
              <button
                key={idx}
                onClick={() => playSound(label)}
                className="bg-purple-100 hover:bg-purple-200 p-4 rounded-xl shadow text-lg"
              >
                üîä {label}
              </button>
            ))}
          </div>
          <p className="text-sm text-gray-600 mt-2">–ù–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —â–æ–± –ø—Ä–æ—Å–ª—É—Ö–∞—Ç–∏ –∑–≤—É–∫ —ñ –∑–Ω–∞–π—Ç–∏ –ª–æ–≥—ñ—á–Ω–µ —Å–ª–æ–≤–æ —Å–µ—Ä–µ–¥ —ñ–Ω—à–∏—Ö.</p>
        </section>

        {/* –í–ø—Ä–∞–≤–∞ 2: –•–∞–æ—Ç–∏—á–Ω—ñ –ø–∞—Ä–∏ */}
        <section className="mb-12">
          <h2 className="text-2xl font-bold text-pink-600 mb-4">üß† –ó'—î–¥–Ω–∞–π —Å–ª–æ–≤–∞-–∞—Å–æ—Ü—ñ–∞—Ü—ñ—ó</h2>
          <div className="flex flex-wrap gap-4 justify-center">
            {shuffledWords.map((word, idx) => (
              <button
                key={idx}
                onClick={() => playSound(word)}
                className="bg-white p-4 rounded-xl border border-gray-300 shadow hover:bg-pink-100 cursor-pointer"
              >
                {word}
              </button>
            ))}
          </div>
          <p className="text-sm text-gray-600 mt-2">–ù–∞—Ç–∏—Å–Ω–∏ –Ω–∞ —Å–ª–æ–≤–æ, —è–∫–µ –∞—Å–æ—Ü—ñ—é—î—Ç—å—Å—è –∑ —ñ–Ω—à–∏–º. –ó–≤—É–∫ –ø—ñ–¥–∫–∞–∂–µ.</p>
        </section>

        {/* –í–ø—Ä–∞–≤–∞ 3: –©–æ –∑–∞–π–≤–µ? */}
        <section className="mb-6">
          <h2 className="text-2xl font-bold text-blue-600 mb-4">üîé –©–æ –∑–∞–π–≤–µ?</h2>
          <div className="grid grid-cols-3 gap-6">
            {oddOneOutOptions.map((item, idx) => (
              <button
                key={idx}
                onClick={() => handleOddOneOut(item.label)}
                className={`p-6 border rounded-xl shadow text-center text-lg hover:bg-blue-100 ${selectedOdd === item.label ? 'bg-blue-200' : 'bg-white'}`}
              >
                {item.image} <br /> {item.label}
              </button>
            ))}
          </div>
          {selectedOdd && (
            <p className="mt-4 text-lg font-semibold text-center">
              {selectedOdd === '–§–∞—Ä–±–∞' ? '‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –§–∞—Ä–±–∞ –Ω–µ –º–∞—î –∑–≤—É–∫—É.' : '‚ùå –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑!'}
            </p>
          )}
        </section>
      </div>
    </div>
  );
};

export default KinestheticLesson;
