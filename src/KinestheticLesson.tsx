import React, { useState } from 'react';

const KinestheticLesson: React.FC = () => {
  const [mazeCompleted, setMazeCompleted] = useState(false);
  const [shapesSelected, setShapesSelected] = useState<string[]>([]);
  const [patternComplete, setPatternComplete] = useState(false);

  const toggleShape = (shape: string) => {
    setShapesSelected(prev =>
      prev.includes(shape) ? prev.filter(s => s !== shape) : [...prev, shape]
    );
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-yellow-100 to-pink-100 p-6 font-sans">
      <div className="max-w-5xl mx-auto bg-white rounded-3xl shadow-xl p-8">
        <h1 className="text-3xl font-bold text-purple-700 text-center mb-8">–ö—ñ–Ω–µ—Å—Ç–µ—Ç–∏—á–Ω–∏–π —É—Ä–æ–∫</h1>

        {/* –í–ø—Ä–∞–≤–∞ 1: –ü–∞–ª—å—Ü–µ–≤–∏–π –ª–∞–±—ñ—Ä–∏–Ω—Ç */}
        <section className="mb-12">
          <h2 className="text-2xl font-bold text-purple-600 mb-4">üåÄ –ü—Ä–æ–≤–µ–¥–∏ –ø–∞–ª—å—Ü–µ–º –ª–∞–±—ñ—Ä–∏–Ω—Ç–æ–º</h2>
          <div className="bg-purple-100 p-6 rounded-xl shadow-md text-center">
            <p className="mb-4 text-lg">–£—è–≤–∏, —â–æ —Ç–≤—ñ–π –ø–∞–ª–µ—Ü—å ‚Äì —Ü–µ –æ–ª—ñ–≤–µ—Ü—å. –ü–æ–≤—ñ–ª—å–Ω–æ –ø—Ä–æ–≤–µ–¥–∏ –π–æ–≥–æ –ø–æ —É—è–≤–Ω–æ–º—É –ª–∞–±—ñ—Ä–∏–Ω—Ç—É (–Ω–∞ –µ–∫—Ä–∞–Ω—ñ), –Ω–µ –ø–æ—Å–ø—ñ—à–∞—é—á–∏.</p>
            <img
              src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f5/Maze_1.svg/800px-Maze_1.svg.png"
              alt="Maze"
              className="mx-auto rounded-xl w-full md:w-1/2"
              onClick={() => setMazeCompleted(true)}
            />
            {mazeCompleted && <p className="mt-3 text-green-600 font-bold">‚úÖ –ú–æ–ª–æ–¥–µ—Ü—å! –ó–∞–≤–¥–∞–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ!</p>}
          </div>
        </section>

        {/* –í–ø—Ä–∞–≤–∞ 2: –í–∏–±—ñ—Ä —Ñ–æ—Ä–º–∏ –Ω–∞ –¥–æ—Ç–∏–∫ */}
        <section className="mb-12">
          <h2 className="text-2xl font-bold text-pink-600 mb-4">üî∫ –í–∏–±–µ—Ä–∏ —Ñ—ñ–≥—É—Ä–∏</h2>
          <p className="text-center mb-3">–û–±–µ—Ä–∏ —Ç—ñ —Ñ—ñ–≥—É—Ä–∏, —è–∫—ñ –º–∞—é—Ç—å –∑–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—Ä–∞—ó. –ù–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –Ω–∏—Ö.</p>
          <div className="flex flex-wrap justify-center gap-6">
            {['–ö–æ–ª–æ', '–ö–≤–∞–¥—Ä–∞—Ç', '–û–≤–∞–ª', '–¢—Ä–∏–∫—É—Ç–Ω–∏–∫', '–ü—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫', '–•–º–∞—Ä–∞'].map((shape, idx) => (
              <div
                key={idx}
                onClick={() => toggleShape(shape)}
                className={`cursor-pointer w-32 h-32 flex items-center justify-center rounded-2xl border-4 text-lg font-bold shadow-md transition ${
                  shapesSelected.includes(shape) ? 'bg-green-200 border-green-600' : 'bg-white border-gray-300'
                }`}
              >
                {shape}
              </div>
            ))}
          </div>
        </section>

        {/* –í–ø—Ä–∞–≤–∞ 3: –ü–æ–±—É–¥—É–π –≤—ñ–∑–µ—Ä—É–Ω–æ–∫ */}
        <section className="mb-12">
          <h2 className="text-2xl font-bold text-blue-600 mb-4">üé® –í—ñ–¥—Ç–≤–æ—Ä–∏ —à–∞–±–ª–æ–Ω</h2>
          <p className="text-center mb-3">–ü–æ–≤—Ç–æ—Ä—é–π –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å: üîµüî¥üü°üîµ...</p>
          <div className="flex justify-center gap-4 mb-4">
            {['üîµ', 'üî¥', 'üü°'].map((color, idx) => (
              <button
                key={idx}
                onClick={() => setPatternComplete(true)}
                className="text-4xl w-20 h-20 bg-white rounded-full shadow border hover:bg-gray-100"
              >
                {color}
              </button>
            ))}
          </div>
          {patternComplete && (
            <p className="text-center text-green-600 font-semibold">‚úÖ –ß—É–¥–æ–≤–æ! –í—ñ–∑–µ—Ä—É–Ω–æ–∫ –ø–æ–≤—Ç–æ—Ä–µ–Ω–æ!</p>
          )}
        </section>
      </div>
    </div>
  );
};

export default KinestheticLesson;
